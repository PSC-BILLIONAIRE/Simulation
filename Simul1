import numpy as np
import numpy.random as npr
import numpy as np
import pandas as pd
prop_non = 1/3
prop_bien = 2/3
L = { "pauvre" , "moyen" , "pauvre"}
LL = []
pmin = 5 
pmax = 40
liste_Prix = []
# Creation action par pas de k
k = 10
pas = (pmax - pmin) / (k - 1)

liste_Prix =[(pmin + i * pas) for i in range(k)]
stock = 100
nbre_etats = 24
prop_pauvre = 1 / 4
prop_moyen = 1 / 2
prop_riche = 1 / 4
jr = 1
df = pd.DataFrame()
df["Propension à payer"] = []
df["Note"] = []
df["Class"] = []
df["Periode"] = []
print(df)
tout = 0 
for i in range(1, jr + 1):
  
    lamda = npr.uniform(5, 10) #Nbre moyen de client par période 
    prix_pauvre = npr.uniform(5, 15)
    prix_moyen = npr.uniform(1.5, 2) * prix_pauvre
    prix_riche = npr.uniform(2, 3) * prix_moyen
    for t in range(1, nbre_etats + 1):
        prix_choisi = npr.choice(liste_Prix)
        n = npr.poisson(lamda) #Nbre de client à la période en cours 
        tout += n 
        np, nm, nr = npr.multinomial(n, [prop_pauvre, prop_moyen, prop_riche])
        LL = [np , nm , nr]
        #print(n, " : ", np, " - ", nm, " - ", nr)
        table_payp = list(npr.poisson(prix_pauvre, np))
        table_paym = list (npr.poisson(prix_moyen, nm))
        table_payr = list(npr.poisson(prix_riche, nr))
        table_pay =  table_payp + table_paym
        table_pay = table_pay + table_payr
        class_p = ["pauvre" for i in range(np)]
        class_m = ["moyen" for i in range(nm)]
        class_r = ["riche" for i in range(nr)]
        Class = class_p + class_m + class_r
        Note = []
        for j in range(3):
            nbre_temp = LL[j]
            nn, nb = npr.multinomial(nbre_temp, [prop_non, prop_bien])   
            Note= Note + list(npr.randint(1 , 4 , nn))
            Note = Note + (list(npr.randint(3, 6 , nb)))
        Periode = [t for i in range(n)]    
        Dic = {"Propension à payer":table_pay , "Note" : Note , "Class" : Class , "Periode" : Periode}
        dg = pd.DataFrame(Dic)
        df = pd.concat([df ,dg])
print(tout == len(df))
df
