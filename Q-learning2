#produit Client supposé défini 
#Segementation supposé effectuée 
gamma = 0 #
Class Etat :
	#constructeur 
	def __init__(self):
	self.heure #heure à 
        self.prix =  #table de prix chaque 10 mins à cet état 
		
Class Action : 
	def __init__(self):
		self.Prix=[] #Prix	
#On peut défir des actions de dimunition prix 

def executer(action , etat ):
    etat.prix = action.prix 
  
Class Politique : 
    	
	def __init__(self): 
		self.TAction = [] #table de (Etat , Action ) 
        
def Proba(etat1 , etat2 , action): 
	return 
	
def recompense (etat): 
    return (revenu - 1*reste_stock)
    
def utilité : 
	return recompense(etat)
	
def utilite_espere(etat , action):
	L = [Proba(etat1 , etat2 , action)*utilité(etat2) for etat2 in ETATS]
	return sum(L)
	
def utilite_espere (etat): 	
	L = [utilite_espere (etat , action) for action in ACTION]
	return recompense(etat) + gamma*max(L)
	
